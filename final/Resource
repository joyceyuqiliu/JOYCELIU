Show  text dynamically when loading:
https://stackoverflow.com/questions/15413911/how-to-display-text-in-div-dynamically

Icons:
https://icons.getbootstrap.com/

hex to rgba:
https://cssgenerator.org/rgba-and-hex-color-generator.html

cssv to json conversion:
https://csvjson.com/csv2json

all data api:
YearEIandBig: https://raw.githubusercontent.com/joyceyuqiliu/JOYCELIU/master/final/dataset/YearEIandBig.csv
CountryEI_H: https://raw.githubusercontent.com/joyceyuqiliu/JOYCELIU/master/final/dataset/CountryEI_H.csv
YearEI_AllDetail: https://raw.githubusercontent.com/joyceyuqiliu/JOYCELIU/master/final/dataset/YearEI_AllDetail.csv
Imp_AllYearDetail: https://raw.githubusercontent.com/joyceyuqiliu/JOYCELIU/master/final/dataset/Imp_AllYearDetail.csv
Exp_AllYearDetail: https://raw.githubusercontent.com/joyceyuqiliu/JOYCELIU/master/final/dataset/Exp_AllYearDetail.csv


tried to find data within arrays
function findWeight (data,b){
  var newArray = [];
  var bArray = Array.entries(data);
  bArray.forEach(object =>{
    if(Array[1].includes(b)){
      newArray.push(Array[2]);
    }
  });
  return newArray
}
var data = "https://raw.githubusercontent.com/joyceyuqiliu/JOYCELIU/master/final/dataset/YearEIandBig.csv"
console.log(findWeight(data,"1996"))





// search in the same position of all arrays, return the value that matches textinput
function checkallData (data){
  for (i = 1; i < allData.length; i++){
    var input = document.getElementById("input");
    if (input = allData[i][1][0]){
    return data = "1996";
  }
}}
 //for (i = 1; i < allData.length; i++){
//  var year = allData[i][1][0];
//  var export = allData[i][2][0];
//  if (year = "input"){

//if (allData[i][1][0]= getElementById("input").value){
//  return data = document.allData[i][2][0]);}
//  else{console.log("Wrong")}
//}}
//}};

function myFunction() {
  document.getElementById("s1n").innerHTML = allData.find(checkallData);
}

//a search function using the jQuery inArray method
// - matches the data position in the array and returns a new array of matched data
//function searchData(data, search){
//  return $.grep(data, function(line,i){
//    return line.join('|').match(search);
//  });
//}


//  var input, filter, i, td, txtValue;
//  input = document.getElementByID("textinput");
//  filter = input.value.toUpperCase();
//  for (i=0; i<byYear.length; i++){
//    if (input = byYear)
//}





//process the data into an array
function processData(allText) {
  var allTextLines = allText.split(/\r\m|\n/);
  var headers = allTextLines[0].split(',');
  var lines = [];
  for(i = 1; i< allTextLines.length; i++){
    var data = allTextLines[i].split(',');
    if(data.length == headers.length){
      lines.push($.map(data, function(field, j){
        return headers[j] + ':' + field;
      }));
    }
  }
return lines;}






// search in the same position of all arrays, return the value that matches textinput
function checkallData (result){
  for (i = 1; i < allData.length; i++){
    var year = allData[i][1].Year;
    if (year = getElementById("input").value){
    return result = allData[2].WorldexpValue;
    document.getElementById("input").result;}
    else{
      return result = "Null";}
  }
  }

function myFunction() {
  document.getElementById("s1n").innerHTML =
  allData.find(checkallData);
}




for (i = 1; i < allData.length; i++){
var year = allData[i][1].Year;
var element = document.getElementById("input");
if (year = element.value){
return result = allData[i][2].WorldexpValue;}
else{
  console.log("Null")}
}}



// this has worked for processing csvjsonfunction processData(allText){
  var allTextLines = allText.split(/\r\n|\n/);
  var headers = allTextLines[0].toString()
  .replace(/['"]+/g, '').split(',');
  var lines = [];
  for (i = 1; i< allTextLines.length; i++){
    var data = allTextLines[i].toString()
    .replace(/['"]+/g, '').split(',');
    if (data.length == headers.length){
    //  for (m=0; m<headers.length; m++){
      //  headers[m] = headers[m].replace(/["]+/g, '');
        lines.push($.map(data, function(field,j){
          return headers[j]+":"+ field;
        }));
      }
    }
  return JSON.stringify(lines).replace(/"/g,'');}







  function checkallData (result){
    for (i=1; i<YearEIandBig.length; i++){
      var year = YearEIandBig[i][1].Year;
      if (year = getElementById("input").value){
      return result = YearEIandBig[2].WorldexpValue;
      document.getElementById("input").result;}
    }
  }

  function myFunction() {
    document.getElementById("s1n").innerHTML =
    YearEIandBig.find(checkallData);
  }



// code from web that try to control the  legend divbutton//            onClick: function(e, legendItem){
  //            var index = legendItem.datasetIndex;
    //          var ci = this.chart;
      //        var alreadyHidden = (ci.getDatasetMeta(index).hidden == null)?
        //          false: ci.getDatasetMeta(index).hidden;
          //    ci.data.datasets.forEach(function(e,i){
            //    var meta = ci.getDatasetMeta(i);
              //  if (i!== index){
                //  if(!alreadyHidden){
                  //  meta.hidden = meta.hidden === null ? !meta.hidden: null;}
                    //else if(meta.hidden === null){
                      //meta.hidden = true;}}
                      //else if (i === index) {
                        //meta.hidden = null;
                      //}});
                        //ci.update();}
        //  },




//the style for up and down button
.sortable .table-sort:before {
    position: absolute;
    content: '';
    top: 36px;
    left: 25px;
    border-bottom: 3px solid currentColor;
    border-left: 3px solid transparent;
    border-right: 3px solid transparent;
  }

.sortable .table-sort:after {
      position: absolute;
      content: '';
      bottom: 56px;
      left: 25px;
      border-top: 3px solid currentColor;
      border-left: 3px solid transparent;
      border-right: 3px solid transparent;
  }




  // table sorting function (but too many rows, slowdowned the server)
  function sortTable(n) {
    var table, rows, switching, i, x, y,
    shouldSwitch, direction,
    switchcount = 0;
    table = document.getElementById("myTable");
    switching = true;
    direction = "asc"; //sort direction to ascending
    while (switching) {
      switching = false; // no switching initially
      rows = table.rows;
      //loop through tbody
      for (i=1; i< rows.length; i++) {
        shouldSwitch = false;
        x = rows[i].getElementsByTagName("TD")[n];
        y = rows[i + 1].getElementsByTagName("TD")[n];
        //if x and y should switch places
        if (direction == "asc") {
          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()){
          shouldSwitch = true;
          break;
        }
      } else if (direction == "desc") {
          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
            shouldSwitch = true;
            break;
          }
        }
      }
      if (shouldSwitch) {
        //if marked as "Switch", make the switch, mark it as done;
        rows[i].parentNode.insertBefore(rows[i + 1],
        rows[i]);
        switching = true;
        //when a switch is done, increase the investigation by 1;
        switchcount ++;
      } else {
        //if nothing has been done, and direction = asc,
        //set direction to desc, run the while loop again
        if (switchcount == 0 && direction =="asc") {
          direction = "desc";
          switching = true;
        }
      }
    }
  }




  // the myFunctionTableI
  function myFunctionTableI(){
    var x = document.getElementById("E-place-table");
    var y = document.getElementById("I-place-table");
    if ((x.style.display === "none") && (y.style.display ==="none")) {
      x.style.display = "none";
      y.style.display ="block";
    } else if ((x.style.display === "block") && (y.style.display ==="none")){
      x.style.display = "none";
      y.style.display ="block";
    } else {
      x.style.display = "none";
      y.style.display ="block";}
    }




    //sortable function
    sortable.onclick = function(e){
      if (e.target.tagName != 'th') return;
      var th = e.target;
      sortGrid(th.cellIndex, th.dataset.type);
    };

    function sortGrid(colNum, type) {
      var tbody = sortable.querySelector('tbody');
      var rowsArray = Array.from(tbody.rows);
      //compare rows
      var compare;
      switch (type) {
        case 'number':
          compare = function (rowA, rowB) {
            return rowA.cells[colNum].innerHTML - rowB.cells[colNum].innerHTML;
        };
          break;
        case 'string':
          compare = function (rowA, rowB) {
            return rowA.cells[colNum].innerHTML > rowB.cells[colNum].innerHTML ? 1: -1;
        };
          break;
      }
      rowsArray.sort(compare);
      tbody.concat(...rowsArray);///ES6 wasn't compatible with all
    }




    //change button color upon clicking (not working)
      var count = 1;
          function setColorE(btn, color) {
              var property = document.getElementById(btn);
              if (count == 0) {
                  property.style.backgroundColor = "#FFDBC9";
                  count = 1;
              }
              else {
                  property.style.backgroundColor = "#E5E5E5";
                  count = 0;
              }
          }

box-shadow: 5px 10px rgba(214, 164, 164, 0.7);






// When a click event occurs on a feature in the states layer, open a popup at the
// location of the click, with description HTML from its properties.
map.on('click', 'Export-2017', function(e) {
  var p = e.features[0].properties;
  new mapboxgl.Popup()
  .setLngLat(e.lngLat)
  .setHTML('In '+ p.Year + ', ' + p.expName + ' exported '+ p.expVmusd + ' Million USD of ' + 'self-reported ' + p.expWmkg + ' Million kg ' + 'plastic scraps to the world. (UN Comtrade Data)')
  .addTo(map);
});

// Change the cursor to a pointer when the mouse is over the states layer.
map.on('mouseenter', 'Export-2017', function() {
map.getCanvas().style.cursor = 'pointer';
});

// Change it back to a pointer when it leaves.
map.on('mouseleave', 'Export-2017', function() {
map.getCanvas().style.cursor = '';
});
});








//add another addSource
map.addSource('imp1996', {
'type': 'geojson',
'data': 'https://raw.githubusercontent.com/joyceyuqiliu/JOYCELIU/master/final/dataset/country_dataset/n1996.json'
});
// Add a layer showing the state polygons.
map.addLayer({
'id': 'import-1996',
'type': 'fill',
'source': 'imp1996',
'layout': {
  'visibility': 'none'},
'paint': {
'fill-color': 'rgba(255, 219, 201, 0.5)',
'fill-outline-color': 'rgba(255, 219, 201, 1)'
}
});


//this is not right
function hideAllLayers (){
  var linkall = document.getElementById("go");
  linkall.className = 'active';
  linkall.onclick = function (e){
  for(var index in toggleLayerAll) {
      var clickedLayer = toggleLayerAll[index];
      //;
      e.preventDefault();
      e.stopPropagation();

      var visibilityAll = map.getLayoutProperty(clickedLayer, 'visibility');

      if (visibilityAll === 'visible') {
          map.setLayoutProperty(clickedLayer, 'visibility', 'none');
          this.className = '';
      } else {
          this.className = 'active';
          map.setLayoutProperty(clickedLayer, 'visibility', 'visible');
      }
    }
linkall.appendChild(linkall);
};}




/// debugg these

function myFunctionTable(){
  if (document.getElementById("input").value == "1996"){
    $("p").empty().hide();
    $("#tablecontain").hide();
    $("#E-1996").appendTo('p.pE');
    $("#I-1996").appendTo('p.pI');
} else if (document.getElementById("input").value == "1997"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-1997").appendTo('p.pE');
  $("#I-1997").appendTo('p.pI');
} else if (document.getElementById("input").value == "1998"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-1998").appendTo('p.pE');
  $("#I-1998").appendTo('p.pI');
} else if (document.getElementById("input").value == "1999"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-1999").appendTo('p.pE');
  $("#I-1999").appendTo('p.pI');
} else if (document.getElementById("input").value == "2000"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2000").appendTo('p.pE');
  $("#I-2000").appendTo('p.pI');
} else if (document.getElementById("input").value == "2001"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2001").appendTo('p.pE');
  $("#I-2001").appendTo('p.pI');
} else if (document.getElementById("input").value == "2002"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2002").appendTo('p.pE');
  $("#I-2002").appendTo('p.pI');
}else if (document.getElementById("input").value == "2003"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2003").appendTo('p.pE');
  $("#I-2003").appendTo('p.pI');
} else if (document.getElementById("input").value == "2004"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2004").appendTo('p.pE');
  $("#I-2004").appendTo('p.pI');
} else if (document.getElementById("input").value == "2005"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2005").appendTo('p.pE');
  $("#I-2005").appendTo('p.pI');
} else if (document.getElementById("input").value == "2006"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2006").appendTo('p.pE');
  $("#I-2006").appendTo('p.pI');
} else if (document.getElementById("input").value == "2007"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2007").appendTo('p.pE');
  $("#I-2007").appendTo('p.pI');
} else if (document.getElementById("input").value == "2008"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2008").appendTo('p.pE');
  $("#I-2008").appendTo('p.pI');
} else if (document.getElementById("input").value == "2009"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2009").appendTo('p.pE');
  $("#I-2009").appendTo('p.pI');
} else if (document.getElementById("input").value == "2010"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2010").appendTo('p.pE');
  $("#I-2010").appendTo('p.pI');
} else if (document.getElementById("input").value == "2011"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2011").appendTo('p.pE');
  $("#I-2011").appendTo('p.pI');
} else if (document.getElementById("input").value == "2012"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2012").appendTo('p.pE');
  $("#I-2012").appendTo('p.pI');
} else if (document.getElementById("input").value == "2013"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2013").appendTo('p.pE');
  $("#I-2013").appendTo('p.pI');
} else if (document.getElementById("input").value == "2014"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2014").appendTo('p.pE');
  $("#I-2014").appendTo('p.pI');
} else if (document.getElementById("input").value == "2015"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2015").appendTo('p.pE');
  $("#I-2015").appendTo('p.pI');
} else if (document.getElementById("input").value == "2016"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2016").appendTo('p.pE');
  $("#I-2016").appendTo('p.pI');
} else if (document.getElementById("input").value == "2017"){
  $("p").empty().hide();
  $("#tablecontain").hide();
  $("#E-2017").appendTo('p.pE');
  $("#I-2017").appendTo('p.pI');
} else {
  $("p").empty().hide();
  $("#tablecontain").hide();
}
}









function myFunctionTable(){
  var input = document.getElementById("input").value;
  if (input === "1996"){
    $('p').empty().hide();
    $("#tablecontain").hide();
    var $e96 = $("#E-1996").clone();
    var $i96 = $("#I-1996").clone();
    $("p.pE").append($e96);
    $('p.pI').append($i96);
  } else if (input === "1997"){
    $('p').empty().hide();
    $("#tablecontain").hide();
    var $e97 = $("#E-1997").clone();
    var $i97 = $("#I-1997").clone();
    $("p.pE").append($e97);
    $('p.pI').append($i97);
}else if (input === "1998"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e98 = $("#E-1998").clone();
  var $i98 = $("#I-1998").clone();
  $("p.pE").append($e98);
  $('p.pI').append($i98);
}else if (document.getElementById("input").value == "1999"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e99 = $("#E-1999").clone();
  var $i99 = $("#I-1999").clone();
  $("p.pE").append($e99);
  $('p.pI').append($i99);
} else if (document.getElementById("input").value == "2000"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e00 = $("#E-2000").clone();
  var $i00 = $("#I-2000").clone();
  $("p.pE").append($e00);
  $('p.pI').append($i00);
} else if (document.getElementById("input").value == "2001"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e01 = $("#E-2001").clone();
  var $i01 = $("#I-2001").clone();
  $("p.pE").append($e01);
  $('p.pI').append($i01);
} else if (document.getElementById("input").value == "2002"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e02 = $("#E-2002").clone();
  var $i02 = $("#I-2002").clone();
  $("p.pE").append($e02);
  $('p.pI').append($i02);
}else if (document.getElementById("input").value == "2003"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e03 = $("#E-2003").clone();
  var $i03 = $("#I-2003").clone();
  $("p.pE").append($e03);
  $('p.pI').append($i03);
} else if (document.getElementById("input").value == "2004"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e04 = $("#E-2004").clone();
  var $i04 = $("#I-2004").clone();
  $("p.pE").append($e04);
  $('p.pI').append($i04);
} else if (document.getElementById("input").value == "2005"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e05 = $("#E-2005").clone();
  var $i05 = $("#I-2005").clone();
  $("p.pE").append($e05);
  $('p.pI').append($i05);
} else if (document.getElementById("input").value == "2006"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e06 = $("#E-2006").clone();
  var $i06 = $("#I-2006").clone();
  $("p.pE").append($e06);
  $('p.pI').append($i06);
} else if (document.getElementById("input").value == "2007"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e07 = $("#E-2007").clone();
  var $i07 = $("#I-2007").clone();
  $("p.pE").append($e07);
  $('p.pI').append($i07);
} else if (document.getElementById("input").value == "2008"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e08 = $("#E-2008").clone();
  var $i08 = $("#I-2008").clone();
  $("p.pE").append($e08);
  $('p.pI').append($i08);
} else if (document.getElementById("input").value == "2009"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e09 = $("#E-2009").clone();
  var $i09 = $("#I-2009").clone();
  $("p.pE").append($e09);
  $('p.pI').append($i09);
} else if (document.getElementById("input").value == "2010"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e10 = $("#E-2010").clone();
  var $i10 = $("#I-2010").clone();
  $("p.pE").append($e10);
  $('p.pI').append($i10);
} else if (document.getElementById("input").value == "2011"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e11 = $("#E-2011").clone();
  var $i11 = $("#I-2011").clone();
  $("p.pE").append($e11);
  $('p.pI').append($i11);
} else if (document.getElementById("input").value == "2012"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e12 = $("#E-2012").clone();
  var $i12 = $("#I-2012").clone();
  $("p.pE").append($e12);
  $('p.pI').append($i12);
} else if (document.getElementById("input").value == "2013"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e13 = $("#E-2013").clone();
  var $i13 = $("#I-2013").clone();
  $("p.pE").append($e13);
  $('p.pI').append($i13);
} else if (document.getElementById("input").value == "2014"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e14 = $("#E-2014").clone();
  var $i14 = $("#I-2014").clone();
  $("p.pE").append($e14);
  $('p.pI').append($i14);
} else if (document.getElementById("input").value == "2015"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e15 = $("#E-2015").clone();
  var $i15 = $("#I-2015").clone();
  $("p.pE").append($e15);
  $('p.pI').append($i15);
} else if (document.getElementById("input").value == "2016"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e16 = $("#E-2016").clone();
  var $i16 = $("#I-2016").clone();
  $("p.pE").append($e16);
  $('p.pI').append($i16);
} else if (document.getElementById("input").value == "2017"){
  $('p').empty().hide();
  $("#tablecontain").hide();
  var $e17 = $("#E-2017").clone();
  var $i17 = $("#I-2017").clone();
  $("p.pE").append($e17);
  $('p.pI').append($i17);
} else {
  $('p').empty().hide();
  $("#tablecontain").hide();
}
//break;}
}
